#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <ctype.h>
#include <deque>
#include <cstring>
#include <set>
#include <bitset>
#include <map>
#include <chrono>
#include <random>
#include <unordered_map>
#include <stdio.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef std::vector<int> vi;
typedef std::vector<bool> vb;
typedef std::vector<string> vs;
typedef std::vector<double> vd;
typedef std::vector<long long> vll;
typedef std::vector<std::vector<int> > vvi;
typedef vector<vll> vvll;
typedef std::vector<std::pair<int, int> > vpi;
typedef vector<vpi> vvpi;
typedef std::pair<int, int> pi;
typedef std::pair<ll, ll> pll;
typedef std::vector<pll> vpll;

const long long mod = 998244353;
const unsigned gen_seed = std::chrono::system_clock::now().time_since_epoch().count();
std::mt19937_64 gen(gen_seed);

#define all(c) (c).begin(),(c).end()
#define srt(c) sort(all(c))
#define srtrev(c) sort(all(c)); reverse(all(c))
#define forn(i, a, b) for(int i = a; i < b; i++)
#define read(x) scanf("%d", &x)
#define readv(x, n) vi x(n); forn(i,0,n) scanf("%d", &x[i])

#define pb push_back
#define mp make_pair

ll c3(ll x) {
    ll x01 = x*(x+1)/2;
    ll x2 = x+2;
    if(x2 % 3 == 0) x2/=3;
    else x01/=3;
    return x01%mod*x2%mod;
}

ll get2(ll n, ll m, ll k) {
    if(n==0 || m==0) return 0;
    if(n>m) swap(n,m);
    return c3(n+m-k-1);
}

ll get(ll n, ll m, ll k) {
    ll ret = 0;
    if (n >= k) {
        if (m >= k-1) {
            ret += (n-k) * (m-k+1) % mod * k % mod;
            ret += k*(k-1)/2 % mod * (m-k+1)%mod;
            ret += k*(k-1)/2 % mod * (n-k)% mod;
        }
        else {
            ret += m*(m+1)/2 % mod * (n-k) % mod;
        }
    }
    else if(m >= k-1) {
        ret += n*(n-1) /2 % mod *(m-k+1)%mod;
    }
    ret += get2(min(n-1,k-1), min(m,k-1), k-1);
    return ret % mod;
}

int main()
{
#ifdef LOCAL
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
#endif
    int t;
    read(t);
    while(t--) {
        int n,m;
        scanf("%d %d", &n, &m);
        ll ans = 0;
        ll d31 = 1;
        forn(k,1,n+m-1) {
            ll cur = get(n,m,k)+get(m,n,k);
//            printf("%d %lld\n", k, cur%mod);
            ans = (ans + cur*d31)%mod;
            d31 = d31*31%mod;
        }
        printf("%lld\n", ans);
        
    }
    
    
}
